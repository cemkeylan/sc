#!/bin/sh -e
readmesize=0; out() { printf '%s\n' "$@";}; die() { out "$@"; exit 1 ;}; license() { printf '%s\n\n%s\n\n%s\n' "Copyright (c) 2021 Cem Keylan <cem@ckyln.com>" "Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted." "THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE." | fold -sw 76 ;}; usage() { out "usage: ${0##*/} [options]" '' Options:; printf '  %-20s %s\n' --test "Run unit tests" --license "Show the license of the project" --print-readme "Output the formatted README file" --generate-readme "Save the formatted README to the README file" --install "Install sc with make" --help/-h "Print this help information"; out '' "Any given command is passed to systemctl" ''; exit 0;}; readme() { out sc ======= '' "For years I have strived to make the best and smallest service manager I could do. I had written sysmgr, a POSIX shell service manager. It wasn't enough. I finally did it, Reddit. This is maximum simplicity, sc." '' "\`sc\` is a simplistic hyper-minimal static portable C99 POSIX shell service manager in POSIX compliant shell script in a single minimal line of code. It is so simple, that it can be run under all POSIX systems. It is so static that this readme is part of this hyper-minimal service manager." '' Dependencies ============ '' "- systemd" "- POSIX make" '' "The \`Makefile\` is built-in for maximum minimalistic static-link-like portability coolness!" '' Unit\ Tests ========== '' "The unit tests are also built-in for this hyper-minimal service manager, just run \`sc --test\`." '' Install ======= '' "In order to install sc, run (as root if needed):" '' "    ./sc --install PREFIX=/usr" '' Rant ==== '' "If you still did not pick up on the sarcasm, this is how you look like with your minimalistic 'Boost/jQuery/some-other-bloat-library' programs." "SLOC doesn't mean anything if you are calling a huge piece of crap to make up for your lack of skills." '' "If you are making your code unreadable for the sake of SLOC, you are also in the wrong. You may not be calling a huge library, but you are giving others (and yourself) a hard time reading your code. I have seen programmers introduce horrible bugs to perfectly running software just because of their obsession with SLOC, and byte size. You should always make sure your code is readable and well commented instead of garbling it up to brag about your code size. Just take a look at this mess of a code, it really is a one-line shell script containing this README file of $readmesize lines, and it is an absolute pain to read. Don't be like this, be smart." '' | fold -sw 76; [ "$1" ] || exit 0 ;}; readmesize=$(readme size | wc -l); case $1 in --print-readme) readme ;; --generate-readme) readme | tee README ;; --install) printf 'install:\n\t@echo Do not actually do that\n\n.PHONY: install\n.POSIX:' | make -f - install ;; --test) out "It works bro trust me." ;; -h|--help) usage ;; --license) license ;; *) command -v systemctl || die "System dependencies are not met" "Please install systemd"; systemctl "$@"; esac
